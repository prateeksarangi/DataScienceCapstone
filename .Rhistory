write.csv(heart, "~/HeartDisease/heart1.csv", row.names = FALSE)
write.csv(trainrand, "~/HeartDisease/trainrand.csv", row.names = FALSE)
write.csv(testrand, "~/HeartDisease/testrand.csv", row.names = FALSE)
write.csv(trainseq, "~/HeartDisease/trainseq.csv", row.names = FALSE)
write.csv(testseq, "~/HeartDisease/testseq.csv", row.names = FALSE)
View(heart)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
heart <- read.csv("~/HeartDisease/heart.csv")
print(heart)
dfNorm <- as.data.frame(lapply(heart["age"], normalize))
heart["age"] <- dfNorm
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.0, 0.25), 0.1)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.25, 0.6), 0.4)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.5, 0.75), 0.6)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.75, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["trestbps"], normalize))
heart["trestbps"] <- dfNorm
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.0, 0.33), 0.2)}))
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.33, 0.67), 0.6)}))
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.67, 1), 1)}))
dfNorm <- as.data.frame(lapply(heart["chol"], normalize))
heart["chol"] <- dfNorm
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.0, 0.2), 0.1)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.2, 0.4), 0.3)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.4, 0.6), 0.5)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.6, 0.8), 0.7)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.8, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["cp"], normalize))
heart["cp"] <- dfNorm
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.0, 0.25), 0.1)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.25, 0.5), 0.4)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.5, 0.75), 0.6)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.75, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["thalach"], normalize))
heart["thalach"] <- dfNorm
dfNorm <- as.data.frame(lapply(heart["thal"], normalize))
heart["thal"] <- dfNorm
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.0, 0.33), 0.2)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.33, 0.67), 0.6)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.67, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["slope"], normalize))
heart["slope"] <- dfNorm
dfNorm <- as.data.frame(lapply(heart["ca"], normalize))
heart["ca"] <- dfNorm
heart["sex"] <- as.data.frame(lapply(heart["sex"], function(x){replace(x, x == 0, 0.1)}))
heart["sex"] <- as.data.frame(lapply(heart["sex"], function(x){replace(x, x == 1, 0.9)}))
heart["fbs"] <- as.data.frame(lapply(heart["fbs"], function(x){replace(x, x == 0, 0.1)}))
heart["fbs"] <- as.data.frame(lapply(heart["fbs"], function(x){replace(x, x == 1, 0.9)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 0, 0.1)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 1, 0.9)}))
heart["exang"] <- as.data.frame(lapply(heart["exang"], function(x){replace(x, x == 0, 0.1)}))
heart["exang"] <- as.data.frame(lapply(heart["exang"], function(x){replace(x, x == 1, 0.9)}))
print(heart)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
heart <- read.csv("~/HeartDisease/heart.csv")
print(heart)
dfNorm <- as.data.frame(lapply(heart["age"], normalize))
heart["age"] <- dfNorm
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.0, 0.25), 0.1)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.25, 0.6), 0.4)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.5, 0.75), 0.6)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x, between(x, 0.75, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["trestbps"], normalize))
heart["trestbps"] <- dfNorm
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.0, 0.33), 0.2)}))
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.33, 0.67), 0.6)}))
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.67, 1), 1)}))
dfNorm <- as.data.frame(lapply(heart["chol"], normalize))
heart["chol"] <- dfNorm
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.0, 0.2), 0.1)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.2, 0.4), 0.3)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.4, 0.6), 0.5)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.6, 0.8), 0.7)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.8, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["cp"], normalize))
heart["cp"] <- dfNorm
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.0, 0.25), 0.1)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.25, 0.5), 0.4)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.5, 0.75), 0.6)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, between(x, 0.75, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["thalach"], normalize))
heart["thalach"] <- dfNorm
dfNorm <- as.data.frame(lapply(heart["thal"], normalize))
heart["thal"] <- dfNorm
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.0, 0.33), 0.2)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.33, 0.67), 0.6)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.67, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["slope"], normalize))
heart["slope"] <- dfNorm
dfNorm <- as.data.frame(lapply(heart["ca"], normalize))
heart["ca"] <- dfNorm
heart["sex"] <- as.data.frame(lapply(heart["sex"], function(x){replace(x, x == 0, 0.1)}))
heart["sex"] <- as.data.frame(lapply(heart["sex"], function(x){replace(x, x == 1, 0.9)}))
heart["fbs"] <- as.data.frame(lapply(heart["fbs"], function(x){replace(x, x == 0, 0.1)}))
heart["fbs"] <- as.data.frame(lapply(heart["fbs"], function(x){replace(x, x == 1, 0.9)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 0, 0.1)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 1, 0.9)}))
heart["exang"] <- as.data.frame(lapply(heart["exang"], function(x){replace(x, x == 0, 0.1)}))
heart["exang"] <- as.data.frame(lapply(heart["exang"], function(x){replace(x, x == 1, 0.9)}))
print(heart)
smp_size <- floor(0.75 * nrow(heart))
train_ind_rand <- sample(seq_len(nrow(heart)), size = smp_size)
trainrand <- heart[train_ind_rand, ]
testrand <- heart[-train_ind_rand, ]
trainseq <- heart[1:227, ]
testseq <- heart[227:303, ]
write.csv(heart, "~/HeartDisease/heart1.csv", row.names = FALSE)
write.csv(trainrand, "~/HeartDisease/trainrand.csv", row.names = FALSE)
write.csv(testrand, "~/HeartDisease/testrand.csv", row.names = FALSE)
write.csv(trainseq, "~/HeartDisease/trainseq.csv", row.names = FALSE)
write.csv(testseq, "~/HeartDisease/testseq.csv", row.names = FALSE)
View(heart)
View(heart)
library(assertthat)
tableAccuracy <- read.csv("~/HeartDisease/tableAccuracy.csv", header=FALSE, sep=";")
View(tableAccuracy)
tableMSE <- read.csv("~/HeartDisease/tableMSE.csv", header=FALSE, sep=";")
View(tableMSE)
mean(tableAccuracy[:])
mean(tableAccuracy[])
mean(tableAccuracy[[]])
mean(tableAccuracy)
mean(tableAccuracy["V1"])
mean(tableAccuracy[["V1"]])
mean(tableAccuracy[["V1", "V2"]])
mean(tableAccuracy[["V1"], ["V2"]])
mean(tableAccuracy[["V1"] ["V2"]])
mean(tableAccuracy[, 1:1500])
colMeans(tableAccuracy[sapply(tableAccuracy, is.numeric)])
meanCol <- colMeans(tableAccuracy[sapply(tableAccuracy, is.numeric)])
View(meanCol)
tableAccuracy <- read.csv("~/HeartDisease/tableAccuracy.csv", header=FALSE, sep=";")
tableMSE <- read.csv("~/HeartDisease/tableMSE.csv", header=FALSE, sep=";")
meanAccuracy <- colMeans(tableAccuracy[sapply(tableAccuracy, is.numeric)])
View(meanAccuracy)
meanMSE <- colMeans(tableMSE[sapply(tableMSE, is.numeric)])
View(meanMSE)
itr <- 1:1500
print(itr)
View(itr)
plot(meanAccuracy, itr)
plot(itr, meanAccuracy)
plot(itr, meanAccuracy, "l")
plot(itr, meanAccuracy, "l", col("BLUE"))
plot(itr, meanAccuracy, "l", sub = "Accuracy of Model")
plot(itr, meanAccuracy, "l", main = "Accuracy of Model")
plot(itr, meanAccuracy, "l", main = "Accuracy of Model",
xlab = "Iteration", ylab = "Accuracy", sub = "Accuracy of Model",
col = "blue")
plot(itr, meanAccuracy, "l", main = "Accuracy of Model",
xlab = "Iteration", ylab = "Accuracy", sub = "Accuracy of Model",
col = "blue", lwd = 2)
plot(itr, meanAccuracy, "l", main = "Accuracy of Model",
xlab = "Iteration", ylab = "Accuracy",
col = "blue", lwd = 2)
plot(itr, meanMSE, "l", main = "Accuracy of Model",
xlab = "Iteration", ylab = "Accuracy",
col = "orange", lwd = 2)
LayerAcc <- read.csv("~/HeartDisease/LayerAcc.csv", header=FALSE)
View(LayerAcc)
plot(LayerAcc$V1, LayerAcc$V2)
hist(LayerAcc$V1, LayerAcc$V2)
hist(LayerAcc)
hist(LayerAcc$V2)
barplot(LayerAcc)
barplot(LayerAcc$V1, LayerAcc$V2)
barplot(LayerAcc$V2, main="Car Distribution", horiz=TRUE,
names.arg=LayerAcc$V1)
barplot(LayerAcc$V1, main="Car Distribution", horiz=TRUE,
names.arg=LayerAcc$V2)
barplot(LayerAcc$V2, main="Car Distribution", horiz=TRUE,
names.arg=LayerAcc$V1)
barplot(LayerAcc$V2, main="Car Distribution",
names.arg=LayerAcc$V1)
lines(LayerAcc$V2[3])
lines(x = LayerAcc.bar, y = LayerAcc$V2[3])
LayerAcc.bar <- barplot(LayerAcc$V2, main="Car Distribution",
names.arg=LayerAcc$V1)
lines(x = LayerAcc.bar, y = LayerAcc$V2[3])
LayerAcc$V2[3]
ablines(x = LayerAcc.bar, y = LayerAcc$V2[3])
?abline
LayerAcc.bar <- barplot(LayerAcc$V2, main="Car Distribution",
names.arg=LayerAcc$V1, col = 'blue')
LayerAcc <- read.csv("~/HeartDisease/LayerAcc.csv", header=FALSE)
LayerAcc.bar <- barplot(LayerAcc$V2, main="Car Distribution",
names.arg=LayerAcc$V1, col = 'blue')
ablines(x = LayerAcc.bar, y = LayerAcc$V2[3])
View(heart)
View(heart)
heart <- read.csv("~/HeartDisease/heart.csv")
head(heart)
head(heart)
heart <- read.csv("~/HeartDisease/heart.csv")
View(heart)
View(heart)
table(heart$target)
LayerAcc.bar <- barplot(LayerAcc$V2, main="Car Distribution",
names.arg=LayerAcc$V1, col = 'blue')
set.seed(1234)
today <- date()
today <- unlist(strsplit(today, " "))
cat("by Prateek Sarangi,", today[1], ",", today[2:3], today[5])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
heart <- read.csv("~/HeartDisease/heart.csv")
head(heart)
library(dplyr)
dfNorm <- as.data.frame(lapply(heart["age"], normalize))
heart["age"] <- dfNorm
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x,between(x, 0.0, 0.25), 0.1)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x,between(x, 0.25, 0.6), 0.4)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x,between(x, 0.5, 0.75), 0.6)}))
heart["age"] <- as.data.frame(lapply(heart["age"], function(x){replace(x,between(x, 0.75, 1), 0.9)}))
dfNorm <- as.data.frame(lapply(heart["trestbps"], normalize))
heart["trestbps"] <- dfNorm
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.0, 0.33), 0.2)}))
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.33, 0.67), 0.6)}))
heart["trestbps"] <- as.data.frame(lapply(heart["trestbps"], function(x){replace(x, between(x, 0.67, 1), 1)}))
dfNorm <- as.data.frame(lapply(heart["chol"], normalize))
heart["chol"] <- dfNorm
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.0, 0.2), 0.1)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.2, 0.4), 0.3)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.4, 0.6), 0.5)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.6, 0.8), 0.7)}))
heart["chol"] <- as.data.frame(lapply(heart["chol"], function(x){replace(x, between(x, 0.8, 1), 0.9)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, x == 0, 0.1)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, x == 1, 0.6)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, x == 2, 0.9)}))
heart["cp"] <- as.data.frame(lapply(heart["cp"], function(x){replace(x, x == 3, 0.01)}))
dfNorm <- as.data.frame(lapply(heart["thalach"], normalize))
heart["thalach"] <- dfNorm
dfNorm <- as.data.frame(lapply(heart["thal"], normalize))
heart["thal"] <- dfNorm
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.0, 0.25), 0.5)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.25, 0.50), 0.6)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.50, 0.75), 0.9)}))
heart["thal"] <- as.data.frame(lapply(heart["thal"], function(x){replace(x, between(x, 0.75, 1.00), 0.1)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 0, 0.3)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 1, 0.9)}))
heart["restecg"] <- as.data.frame(lapply(heart["restecg"], function(x){replace(x, x == 2, 0.1)}))
heart["slope"] <- as.data.frame(lapply(heart["slope"], function(x){replace(x, x == 0, 0.01)}))
heart["slope"] <- as.data.frame(lapply(heart["slope"], function(x){replace(x, x == 1, 0.2)}))
heart["slope"] <- as.data.frame(lapply(heart["slope"], function(x){replace(x, x == 2, 0.9)}))
heart["ca"] <- as.data.frame(lapply(heart["ca"], function(x){replace(x, x == 0, 0.9)}))
heart["ca"] <- as.data.frame(lapply(heart["ca"], function(x){replace(x, x == 1, 0.6)}))
heart["ca"] <- as.data.frame(lapply(heart["ca"], function(x){replace(x, x == 2, 0.45)}))
heart["ca"] <- as.data.frame(lapply(heart["ca"], function(x){replace(x, x == 3, 0.3)}))
heart["ca"] <- as.data.frame(lapply(heart["ca"], function(x){replace(x, x == 4, 0.1)}))
heart["fbs"] <- as.data.frame(lapply(heart["fbs"], function(x){replace(x, x == 0, 0.9)}))
heart["fbs"] <- as.data.frame(lapply(heart["fbs"], function(x){replace(x, x == 1, 0.1)}))
heart["sex"] <- as.data.frame(lapply(heart["sex"], function(x){replace(x, x == 0, 0.1)}))
heart["sex"] <- as.data.frame(lapply(heart["sex"], function(x){replace(x, x == 1, 0.9)}))
heart["exang"] <- as.data.frame(lapply(heart["exang"], function(x){replace(x, x == 0, 0.9)}))
heart["exang"] <- as.data.frame(lapply(heart["exang"], function(x){replace(x, x == 1, 0.1)}))
head(heart)
smp_size <- floor(0.75 * nrow(heart))
train_ind_rand <- sample(seq_len(nrow(heart)), size = smp_size)
trainrand <- heart[train_ind_rand, ]
testrand <- heart[-train_ind_rand, ]
trainseq <- heart[1:227, ]
testseq <- heart[227:303, ]
write.csv(heart, "~/HeartDisease/heart1.csv", row.names = FALSE)
write.csv(trainrand, "~/HeartDisease/trainrand.csv", row.names = FALSE)
write.csv(testrand, "~/HeartDisease/testrand.csv", row.names = FALSE)
write.csv(trainseq, "~/HeartDisease/trainseq.csv", row.names = FALSE)
write.csv(testseq, "~/HeartDisease/testseq.csv", row.names = FALSE)
LayerAcc <- read.csv("~/HeartDisease/LayerAcc.csv", header=FALSE)
LayerAcc.bar <- barplot(LayerAcc$V2, names.arg=LayerAcc$V1, col = 'blue')
tableAccuracy <- read.csv("~/HeartDisease/tableAccuracy.csv", header=FALSE, sep=";")
meanAccuracy <- colMeans(tableAccuracy[sapply(tableAccuracy, is.numeric)])
itr <- 1:1500
plot(itr, meanAccuracy, "l", xlab = "Iteration", ylab = "Accuracy",
col = "blue", lwd = 2)
tableMSE <- read.csv("~/HeartDisease/tableMSE.csv", header=FALSE, sep=";")
meanMSE <- colMeans(tableMSE[sapply(tableMSE, is.numeric)])
itr <- 1:1500
plot(itr, meanMSE, "l", xlab = "Iteration", ylab = "Mean Square Error",
col = "orange", lwd = 2)
Structure <- read.csv("~/HeartDisease/Structure.csv", sep=";")
View(Structure)
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", header=FALSE)
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=NeuronAcc$Structure, col = 'blue')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", header=FALSE)
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=NeuronAcc$Structure, col = 'blue')
LayerAcc.bar <- barplot(LayerAcc$V2,
names.arg=LayerAcc$V1, col = 'blue')
View(AccLayer)
View(LayerAcc)
StructureAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
View(StructureAcc)
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy,
names.arg=NeuronAcc$Structure, col = 'red')
LayerAcc <- read.csv("~/HeartDisease/LayerAcc.csv", header=FALSE)
LayerAcc.bar <- barplot(LayerAcc$V2, names.arg=LayerAcc$V1, col = 'blue', xlab = "Accuracy", ylab = "Number of hidden neurons")
LayerAcc <- read.csv("~/HeartDisease/LayerAcc.csv", header=FALSE)
LayerAcc.bar <- barplot(LayerAcc$V2, names.arg=LayerAcc$V1, col = 'blue', xlab = "Accuracy", ylab = "Number of hidden neurons")
LayerAcc <- read.csv("~/HeartDisease/LayerAcc.csv", header=FALSE)
LayerAcc.bar <- barplot(LayerAcc$V2, names.arg=LayerAcc$V1, col = 'blue', xlab = "Number of hidden neurons", ylab = "Accuracy")
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=NeuronAcc$Structure, col = 'blue')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=NeuronAcc$Structure, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:25
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:24
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:24
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:24
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:16
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:16
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
itr = 1:15
NeuraonAcc.bar <- barplot(NeuronAcc$Accuracy, names.arg=itr, col = 'red')
NeuronAcc <- read.csv("~/HeartDisease/Structure.csv", sep=";")
View(NeuronAcc)
View(heart)
train_labels <- read.csv("~/Hology1/training/crime/train_labels.csv")
View(train_labels)
library(dplyr)
library(ggplot2)
library(microbenchmark)
count(train_labels, class)
test_labels <- read.csv("~/Hology1/training/crime/test_labels.csv")
View(test_labels)
count(test_labels, class)
install.packages("keras")
package("keras")
library(keras)
getwd()
getwd()
x <- rnorm(1000, mean = 10, sd = 0.5)
t.test(x, mu = 10)
exit()
exit
q()
## P-values
# The Earth is Round (p < .05)
# Compare what we calculated to our hypothetical distribution and see if
# the value is "extreme" (p-value)
pt(0.8, 15, lower.tail = F) # the probability of seeing evidence as extreme or
# more extreme than that actually obtained under H0
choose(8, 7) * 0.5^8 + choose(8, 8) * 0.5^8
pbinom(6, size = 8, prob = .5, lower.tail = F) # >= 7
ppois(9, 5, lower.tail = F) # >= 10
pnorm(-0.355, lower.tail = F)
## Power
sigma <- 10
mu_0 <- 0
mu_a <- 2
n <- 100
alpha <- .05
plot(c(-3, 6), c(0, dnorm(0)), type = "n", frame = F, xlab = "Z value", ylab = "")
xvals <- seq(-3, 6, length = 1000)
lines(xvals, dnorm(xvals), type = "l", lwd = 3)
lines(xvals, dnorm(xvals, mean = sqrt(n)*(mu_a - mu_0) / sigma), lwd = 3)
abline(v = qnorm(1 - alpha))
# power.t.test -> T-test power
power.t.test(n = 16, delta = 2 / 4, sd = 1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd = 1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$n
## Multiple testing
# Error measure, correction
# no true positives
set.seed(1010093)
pValues <- rep(NA, 1000)
for(i in 1:1000) {
y <- rnorm(20)
x <- rnorm(20)
pValues[i] <- summary(lm(y ~ x))$coeff[2, 4]
}
sum(pValues < 0.05) # 51
# Controls FWER: Family wise error rate
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
# Controls FDR: False discovery rate
sum(p.adjust(pValues, method = "BH") < 0.05)
# 50% true positives
set.seed(1010093)
pValues <- rep(NA, 1000)
for(i in 1:1000) {
x <- rnorm(20)
# first 500 beta = 0, last 500 beta = 2
if (i <= 500) {
y <- rnorm(20)
} else {
y <- rnorm(20, mean = 2*x)
}
pValues[i] <- summary(lm(y ~ x))$coeff[2, 4]
}
trueStatus <- rep(c("zero", "not zero"), each = 500)
table(pValues < 0.05, trueStatus)
# Controls FWER: Family wise error rate
table(p.adjust(pValues, method = "bonferroni") < 0.05, trueStatus)
# Controls FDR: False discovery rate
table(p.adjust(pValues, method = "BH") < 0.05, trueStatus)
par(mfrow = c(1, 2))
plot(pValues, p.adjust(pValues, method = "bonferroni"), pch = 19)
plot(pValues, p.adjust(pValues, method = "BH"), pch = 19)
## Resampled inference
# The jackknife: a tool for estimating standard errors and the bias of estimators
# Estimate the bias and standard error of the median
library(UsingR)
data(father.son)
x <- father.son$sheight
n <- length(x)
theta <- median(x)
jk <- sapply(1 : n, function(i) median(x[-i]))
thetaBar <- mean(jk)
biasEst <- (n - 1)*(thetaBar - theta)
seEst <- sqrt((n - 1)*mean((jk - thetaBar) ^ 2))
c(biasEst, seEst) # 0.0000000 0.1014066
library(bootstrap)
temp <- jackknife(x, median)
c(temp$jack.bias, temp$jack.se) # 0.0000000 0.1014066
## Bootstrapping
B <- 1000
resamples <- matrix(sample(x, n*B, replace = T), B, n)
medians <- apply(resamples, 1, median)
sd(medians)
quantile(medians, c(.025, .975))
hist(medians)
## Permutation tests
data(InsectSprays)
boxplot(count ~ spray, data = InsectSprays)
subdata <- InsectSprays[InsectSprays$spray %in% c("B", "C"), ]
y <- subdata$count
group <- as.character(subdata$spray)
testStat <- function(w, g) mean(w[g == "B"]) - mean(w[g == "C"])
observedStat <- testStat(y, group)
permutations <- sapply(1 : 10000, function(i) testStat(y, sample(group)))
observedStat # 13.25
mean(permutations > observedStat) # 0
# p-value = 0 here
hist(permutations, breaks = 30
q()
install.packages(bootstrap)
install.packages(c("GGally", "gridExtra"))
source('~/.active-rstudio-document', echo=TRUE)
reticulate::repl_python()
import math
yes
clear
reticulate::repl_python()
install.packages("plotly")
install.packages("leaflet")
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
#addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
#addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
# Print the map
library(leaflet)
m <- leaflet() %>%
addTiles()   # Add default OpenStreetMap map tiles
#addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet() %>%
addTiles()  %>% # Add default OpenStreetMap map tiles
addAwesomeMarkers(lng=83.30, lat=20.40, popup="My birth place") %>%
addMeasure(map, position = "topright", primaryLengthUnit = "feet", secondaryLengthUnit = NULL, primaryAreaUnit = "acres", secondaryAreaUnit = NULL, activeColor = "#ABE67E", completedColor = "#C8F2BE", popupOptions = list(className = "leaflet-measure-resultpopup", autoPanPadding = c(10, 10)), captureZIndex = 10000, localization = "en", decPoint = ".", thousandsSep = ",")
m # Print the map
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R") %>%
setView(lng = 174.768, lat = -36.852, zoom = 12)
m  # Print the map
shiny::runApp('DataScienceCoursera/RPackages/assignment')
runApp('DataScienceCoursera/RPackages/assignment')
con <- file("en_US.twitter.txt", "r") readLines(con, 1)
con <- file("en_US.twitter.txt", "r")
readLines(con, 1)
con <- file("/Users/ashwini/DataScienceCapstone/data/en_US.twitter.txt", "r")
con <- file("/Users/ashwini/DataScienceCapstone/final/en_US/en_US.twitter.txt", "r")
readLines(con, 1)
setwd("~/DataScienceCapstone")
con <- file("final/en_US/en_US.twitter.txt", "r")
readLines(con, 1)
con <- file("final/en_US/en_US.twitter.txt", "r")
readLines(con, 5)
install.packages("sparklyr")
install.packages("sparklyr")
install.packages("SentimentAnalysis")
close(con)
install.packages("SentimentAnalysis")
install.packages("tm")
install.packages("syuzhet")
